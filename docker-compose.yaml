services:
  pacman:
    build: .
    command: bash
    develop:
      watch:
        - action: sync
          path: ./
          target: /app
          ignore:
            - pacman-env
        # - action: rebuild
        #   path: '**/*.py'
    networks:
      - app_network
    volumes:
      - pacman_volume:/data
    depends_on:
      rabbitmqserver:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 12g
        
  rabbitmqserver:
    container_name: rabbitmqServer
    build:
      context: .
      dockerfile: ./rabbitMQ.Dockerfile
    hostname: "rabbitmq-host"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "pass"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status"]
      interval: 30s
      timeout: 10s
      retries: 5

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: worker
    depends_on:
      rabbitmqserver:
        condition: service_healthy
    networks:
      - app_network
    deploy:
      resources:
        limits:
          memory: 2g

networks:
  app_network:

volumes:
  pacman_volume: